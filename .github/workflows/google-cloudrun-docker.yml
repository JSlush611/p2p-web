name: 'Build and Deploy Frontend and Backend to Cloud Run'

on:
  push:
    branches:
      - "main"

env:
  PROJECT_ID: 'p2p-web-433803'
  REGION: 'us-central1'
  FRONTEND_SERVICE: 'p2p-web-frontend'
  BACKEND_SERVICE: 'p2p-web-backend'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/426650378682/locations/global/workloadIdentityPools/github/providers/my-repo'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'  # Added packages permission

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'

      # Docker Auth (to Artifact Registry - pkg.dev)
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'
          registry: '${{ env.REGION }}-docker.pkg.dev'

      # Build and Push Frontend Container
      - name: 'Build and Push Frontend Container'
        uses: 'docker/build-push-action@v5'
        with:
          context: ./p2p-frontend
          file: ./p2p-frontend/Dockerfile
          platforms: linux/amd64
          push: true
          build-args: |
            REACT_APP_API_URI=${{ secrets.REACT_APP_API_URI }}
            REACT_APP_EMAIL_JS_SERVICE_ID=${{ secrets.REACT_APP_EMAIL_JS_SERVICE_ID }}
            REACT_APP_EMAIL_JS_TEMPLATE_ID=${{ secrets.REACT_APP_EMAIL_JS_TEMPLATE_ID }}
            REACT_APP_EMAILJS_PUBLIC_KEY=${{ secrets.REACT_APP_EMAILJS_PUBLIC_KEY }}
            REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.REACT_APP_RECAPTCHA_SITE_KEY }}
            REACT_APP_RECAPTCHA_SECRET_KEY=${{ secrets.REACT_APP_RECAPTCHA_SECRET_KEY }}
            GENERATE_SOURCEMAP=${{ secrets.GENERATE_SOURCEMAP }}
          tags: |
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.FRONTEND_SERVICE }}/frontend:${{ github.sha }}

      # Deploy Frontend to Cloud Run
      - id: deploy_frontend
        name: 'Deploy Frontend to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.FRONTEND_SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.FRONTEND_SERVICE }}/frontend:${{ github.sha }}'
          project_id: '${{ env.PROJECT_ID }}'

      # Build and Push Backend Container
      - name: 'Build and Push Backend Container'
        uses: 'docker/build-push-action@v5'
        with:
          context: ./p2p-backend
          file: ./p2p-backend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.BACKEND_SERVICE }}/backend:${{ github.sha }}

      # Deploy Backend to Cloud Run
      - id: deploy_backend
        name: 'Deploy Backend to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.BACKEND_SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.BACKEND_SERVICE }}/backend:${{ github.sha }}'
          project_id: '${{ env.PROJECT_ID }}'

      - name: 'Show Frontend Output'
        run: |
          echo "Frontend URL: ${{ steps.deploy_frontend.outputs.url }}"

      - name: 'Show Backend Output'
        run: |
          echo "Backend URL: ${{ steps.deploy_backend.outputs.url }}"
